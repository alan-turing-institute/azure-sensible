---

- name: configure vm
  hosts: vm

  vars_files:
    - ansible_vars.yaml
    - terraform_vars.yaml

  vars:
    apt_packages: []
    totp: false
    docker: false
    docker_users: []

  collections:
    - devsec.hardening

  roles:
    - role: oefenweb.fail2ban
      become: yes
      vars:
        fail2ban_services:
          - name: sshd
            maxretry: 5
            bantime: 1h
    - role: devsec.hardening.ssh_hardening
      become: yes
      vars:
        ssh_server_password_login: false
        ssh_permit_root_login: "no"
        ssh_use_pam: false
        ssh_challengeresponseauthentication: false
        sshd_authenticationmethods: publickey
        sftp_enabled: true
        ssh_print_last_log: true
      when: not totp
    - role: devsec.hardening.ssh_hardening
      become: yes
      vars:
        ssh_server_password_login: false
        ssh_permit_root_login: "no"
        ssh_use_pam: true
        ssh_challengeresponseauthentication: true
        sshd_authenticationmethods: "publickey,keyboard-interactive:pam"
        ssh_server_match_user:
          - user: "{{ ansible_user }}"
            rules: ["AuthenticationMethods publickey"]
        sftp_enabled: true
        ssh_print_last_log: true
      when: totp
    - role: singleplatform-eng.users
      become: yes
    - role: geerlingguy.docker
      become: yes
      when: docker


  tasks:
    - name: Wait for cloud init to finish
      wait_for:
        path: /var/lib/cloud/instance/boot-finished

    - name: Configure data disk
      block:
        - name: Partition disk
          become: yes
          community.general.parted:
            device: /dev/disk/azure/scsi1/lun0
            label: gpt
            number: 1
            state: present
          register: data_disk

        - name: Create ext4 file system
          become: yes
          community.general.filesystem:
            device: "{{ data_disk.disk.dev }}1"
            fstype: ext4

        - name: Mount data partition
          become: yes
          mount:
            path: "/shared"
            state: mounted
            src: "{{ data_disk.disk.dev }}1"
            fstype: ext4
            opts: defaults,nofail
            passno: "2"

        - name: Create group for shared work
          become: yes
          group:
            name: shared
            system: yes
            state: present

        - name: Add all users to the shared group
          become: yes
          user:
            name: "{{ item.username }}"
            groups: shared
            append: true
          loop: "{{ users }}"

        - name: Configure shared directory
          become: yes
          file:
            path: /shared
            state: directory
            owner: root
            group: shared
            mode: u=rwx,g=rwx,o=rx,g+s

        - name: Ensure setfacl and getfacl are installed
          become: yes
          apt:
            name: acl
            state: present

        - name: Set group permissions for new files in shared data directory
          become: yes
          acl:
            path: /shared
            etype: group
            default: yes
            permissions: rw
            state: present
      when: data_disk_size_gb | int > 0

    - name: Configure TOTP authentication
      block:
        - name: Install PAM OATH packages for TOTP
          become: yes
          apt:
            name:
              - libpam-oath
              - oathtool
            state: present

        - name: Find users with existing TOTP seeds
          become: yes
          command: "grep {{ item.username }} /etc/users.oath"
          loop: "{{ users }}"
          register: totp_users
          ignore_errors: yes
          changed_when: no

        - name: Create TOTP seeds for each user without one
          become: yes
          lineinfile:
            path: /etc/users.oath
            line: "HOTP/T30/6 {{ item.item.username }} - {{ lookup ('password', '/dev/null chars=hexdigits length=30') }}"
            create: yes
            owner: root
            mode: 0600
          loop: "{{ totp_users.results }}"
          when: item.failed

        - name: Enable OATH for SSH login in PAM configuration
          become: yes
          lineinfile:
            path: /etc/pam.d/sshd
            state: present
            line: 'auth [success=done new_authtok_reqd=done default=die] pam_oath.so usersfile=/etc/users.oath window=30 digits=6'
            insertbefore: BOF
            mode: 0644

        - name: Require OATH for sudo
          become: yes
          lineinfile:
            path: /etc/pam.d/sudo
            state: present
            # nullok is required for users without TOTP configured, e.g. ansible_user
            line: 'auth [success=done new_authtok_reqd=done default=die] pam_oath.so usersfile=/etc/users.oath window=30 digits=6 nullok'
            insertbefore: BOF
            mode: 0644

        - name: Register TOTP hashes to a variable
          become: yes
          shell: sed -E "s:HOTP/T30/6 (\S+) - ([0-9a-fA-F]{30}).*:\1 \2:g" /etc/users.oath
          args:
            warn: false
          when: users is defined
          register: totp_hashes
          changed_when: no

        - name: Write TOTP hashes to file
          copy:
            content: "{{ totp_hashes.stdout }}"
            dest: ./totp_hashes.txt
            mode: 0644
          delegate_to: localhost
          when: users is defined
      when: totp

    - name: Install selected packages
      apt:
        name: "{{ apt_packages }}"
        state: present
        update_cache: yes
      become: yes

    - name: Print IP address
      debug:
        var: ansible_host
